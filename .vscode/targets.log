make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 4.3
# Built for x86_64-redhat-linux-gnu
# Copyright (C) 1988-2020 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.
 

# Make data base, printed on Wed Jan  5 10:13:17 2022

# Variables

# environment
GDK_BACKEND = x11
# environment
LC_ALL = C
# environment
NO_AT_BRIDGE = 1
# environment
GJS_DEBUG_OUTPUT = stderr
# environment
VSCODE_IPC_HOOK_EXTHOST = /run/user/1000/vscode-ipc-8f1725a0-39d7-40b7-98d6-1ff60b79a3c3.sock
# environment
VSCODE_CWD = /home/tch
# makefile (from 'Makefile', line 7)
ATTACH_ENV = -a=stdin -a=stdout -a=stderr
# environment
GDM_LANG = en_US.UTF-8
# default
MAKE_COMMAND := make
# environment
define BASH_FUNC_which%%
() {  ( alias;
 eval ${which_declare} ) | /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot "$@"
}
endef
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# default
.VARIABLES := 
# environment
PWD = /home/tch/Projects/reftch/java-container
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
HOSTNAME = cp2123
# environment
MAIL = /var/spool/mail/tch
# environment
XDG_DATA_DIRS = /home/tch/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share/:/usr/share/
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
VSCODE_LOG_STACK = false
# automatic
%F = $(notdir $%)
# environment
VSCODE_CODE_CACHE_PATH = /home/tch/.config/Code/CachedData/899d46d82c4c95423fb7e10e68eba52050e30ba3
# environment
LANG = C
# environment
XAUTHORITY = /run/user/1000/.mutter-Xwaylandauth.UOVRF1
# default
.LOADED := 
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# makefile
MAKEFLAGS = pqrR
# makefile
CURDIR := /home/tch/Projects/reftch/java-container
# makefile (from 'Makefile', line 10)
UNAME := Linux
# environment
VSCODE_PIPE_LOGGING = true
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# environment
LESSOPEN = ||/usr/bin/lesspipe.sh %s
# automatic
*D = $(patsubst %/,%,$(dir $*))
# makefile (from 'Makefile', line 5)
PORT = 8080
# environment
MFLAGS = -pqrR
# environment
SSH_AUTH_SOCK = /run/user/1000/keyring/ssh
# default
.SHELLFLAGS := -c
# environment
WAYLAND_DISPLAY = wayland-0
# environment
HISTSIZE = 1000
# automatic
+D = $(patsubst %/,%,$(dir $+))
# environment
XDG_SESSION_DESKTOP = gnome
# environment
VSCODE_CRASH_REPORTER_START_OPTIONS = {"companyName":"Microsoft","productName":"VSCode","submitURL":"appcenter://code?aid=fba07a4d-84bd-4fc8-a125-9640fc8ce171&uid=864aff11-4b89-4ae5-b942-51dcd6a03085&iid=864aff11-4b89-4ae5-b942-51dcd6a03085&sid=864aff11-4b89-4ae5-b942-51dcd6a03085","uploadToServer":true}
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST := Makefile
# automatic
@F = $(notdir $@)
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
VSCODE_PID = 15780
# environment
XDG_SESSION_TYPE = wayland
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'Makefile', line 4)
TAG = 16
# environment
SESSION_MANAGER = local/unix:@/tmp/.ICE-unix/11312,unix/unix:/tmp/.ICE-unix/11312
# automatic
*F = $(notdir $*)
# makefile (from 'Makefile', line 9)
MOUNT = -v "${CURDIR}":/${APP_DIR}
# environment
CHROME_DESKTOP = code-url-handler.desktop
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# automatic
<D = $(patsubst %/,%,$(dir $<))
# makefile (from 'Makefile', line 27)
DOCKER = podman
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# environment
BREAKPAD_DUMP_LOCATION = /home/tch/.config/Code/exthost Crash Reports
# default
MAKE_HOST := x86_64-redhat-linux-gnu
# makefile
SHELL = /bin/sh
# default
MAKECMDGOALS := all
# environment
XMODIFIERS = @im=ibus
# environment
GJS_DEBUG_TOPICS = JS ERROR;JS LOG
# environment
SHLVL = 0
# environment
MAKELEVEL := 0
# default
MAKE = $(MAKE_COMMAND)
# environment
PATH = /home/tch/.local/bin:/home/tch/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin
# environment
MOZ_GMP_PATH = /usr/lib64/mozilla/plugins/gmp-gmpopenh264/system-installed
# default
MAKEFILES := 
# automatic
^F = $(notdir $^)
# environment
INVOCATION_ID = c568568329224642bb563045e0fc85d9
# environment
VSCODE_LOG_NATIVE = false
# environment
USERNAME = tch
# environment
GNOME_SETUP_DISPLAY = :1
# automatic
?F = $(notdir $?)
# makefile (from 'Makefile', line 42)
DOCKERBUILD = ${DOCKER} build --build-arg TAG=${TAG} 
# environment
XDG_CURRENT_DESKTOP = GNOME
# automatic
+F = $(notdir $+)
# environment
DESKTOP_SESSION = gnome
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = GNOME
# 'override' directive
GNUMAKEFLAGS := 
# environment
LOGNAME = tch
# environment
GIO_LAUNCHED_DESKTOP_FILE = /usr/share/applications/code.desktop
# makefile
.DEFAULT_GOAL := clean
# environment
SYSTEMD_EXEC_PID = 11346
# environment
HISTCONTROL = ignoredups
# environment
EDITOR = /usr/bin/nano
# environment
DISPLAY = :0
# environment
USER = tch
# default
MAKE_VERSION := 4.3
# 'override' directive
.SHELLSTATUS := 0
# environment
MANAGERPID = 11204
# makefile (from 'Makefile', line 6)
APP_DIR = app
# environment
which_declare = declare -f
# environment
DEBUGINFOD_URLS = https://debuginfod.fedoraproject.org/ 
# environment
GIO_LAUNCHED_DESKTOP_FILE_PID = 15780
# makefile (from 'Makefile', line 19)
HAS_DOCKER = $(shell command -v docker > /dev/null 2>&1; [ $$? -eq 0 ] && echo 1 || echo 0)
# environment
_ = /usr/bin/make
# environment
XDG_RUNTIME_DIR = /run/user/1000
# environment
JOURNAL_STREAM = 8:209378
# environment
XDG_SESSION_CLASS = user
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/services/extensions/node/extensionHostProcess
# makefile (from 'Makefile', line 8)
SECURITY_ENV = --security-opt label=disable
# environment
HOME = /home/tch
# environment
QT_IM_MODULE = ibus
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
VSCODE_IPC_HOOK = /run/user/1000/vscode-4b2bc4f5-1.63.2-main.sock
# default
.RECIPEPREFIX := 
# automatic
<F = $(notdir $<)
# default
SUFFIXES := 
# makefile (from 'Makefile', line 31)
DOCKERRUN = ${DOCKER} container run --name ${APP_NAME} --rm -t ${PORT_ENV} ${PROXY_ENV} ${ATTACH_ENV} ${SECURITY_ENV} ${VOLUME_ENV} ${APP_NAME}:${TAG}
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell nocomment grouped-target extra-prereqs archives jobserver output-sync check-symlink guile load
# makefile (from 'Makefile', line 20)
HAS_PODMAN = $(shell command -v podman > /dev/null 2>&1; [ $$? -eq 0 ] && echo 1 || echo 0)
# environment
XDG_MENU_PREFIX = gnome-
# makefile (from 'Makefile', line 3)
APP_NAME = java-docker
# environment
GDMSESSION = gnome
# variable set hash-table stats:
# Load=116/1024=11%, Rehash=0, Collisions=4/182=2%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 40, inode 425000): 9 files, no impossibilities.

# 9 files, no impossibilities in 1 directories.

# Implicit Rules

%:
#  recipe to execute (from 'Makefile', line 68):
	@:

# 1 implicit rules, 0 (0.0%) terminal.
# Files

# Not a target:
docker:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

Makefile:
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'Makefile'
#  Last modified 2022-01-05 08:33:45.297828502
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 68):
	@:

clean: docker
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 62):
	rm -rf ${APP_DIR}/target
 

stop:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 56):
	${DOCKER} container stop ${APP_NAME}

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

dev:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 53):
	${DOCKERRUN} -c "cd /${APP_DIR} && ./mvnw $(filter-out $@,$(MAKECMDGOALS))"

init:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 50):
	${DOCKERBUILD} -f Dockerfile app/ -t ${APP_NAME}:${TAG}

all:
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'all'
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := all
# automatic
# * := all
# automatic
# < := 
# automatic
# + := 
# automatic
# % := 
# automatic
# ^ := 
# automatic
# ? := 
# automatic
# | := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/11=9%
#  recipe to execute (from 'Makefile', line 68):
	@:

console:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 59):
	${DOCKER} exec -it ${APP_NAME} /bin/sh
		

.PHONY: clean init dev stop console
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# files hash-table stats:
# Load=11/1024=1%, Rehash=0, Collisions=0/35=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 22 / storage = 159 B / avg = 7 B
# current buf: size = 8162 B / used = 159 B / count = 22 / avg = 7 B

# strcache performance: lookups = 41 / hit rate = 46%
# hash-table stats:
# Load=22/8192=0%, Rehash=0, Collisions=0/41=0%
# Finished Make data base on Wed Jan  5 10:13:17 2022

 
